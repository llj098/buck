{namespace android_react_native_library}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'android_react_native_library()' /}
    {param prettify: true /}
    {param description}
      A rule used to bundle React Native Javascript code.
    {/param}
    {param content}

{call buck.rule}
{param status: 'UNFROZEN' /}
{param overview}
An <code>android_react_native_library()</code> rule builds a single javascript 
bundle file from the input javascript sources. If an <code>android_binary()</code> 
rule transitively depends on this rule, the output of this rule (i.e. the JS bundle)
gets packaged as an asset in the <code>.apk</code> of the Android app.
{/param}

{param args}

{call buck.arg}
  {param name: 'name' /}
  {param desc}
  The name of the rule.
  {/param}
{/call}

{call react_native_common.srcs_arg /}

{call react_native_common.deps_arg /}

{call react_native_common.entry_path_arg /}

/***/
{call buck.arg}
  {param name : 'bundle_name' /}
  {param desc}
  A file name for the output of this rule.
  For example, if this is set to "MyApp.js", the output of this rule will be 
  placed at <code>/assets/MyApp.js</code> inside the <code>.apk</code> file.
  {/param}
{/call}

/***/
{call buck.arg}
  {param name : 'package' /}
  {param desc}
  Java package for the <code>R.java</code> file that will be generated for
  resources, which are included in <code>srcs</code> and are referenced by the
  javascript code.
  <br>
  <strong>Note:</strong> If this parameter is unset, Buck will not package any
  resources in the final APK.
  {/param}
{/call}
{/param} // close args

{/call} // close buck.rule

    {/param}
  {/call}
{/template}
